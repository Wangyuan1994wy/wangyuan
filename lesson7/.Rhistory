table(mpg$displ)
?level
??levels
as.numeric(mpg$drv)
data(mpg)
str(mgp)
str(mpg)
?as.factor
is.factor(mpg$drv)
factor(x=character(mpg$drv))
as.factor(x=character(mpg$drv))
as.factor(mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
as.factor(mpg$drv)
is.factor(mpg$drv)
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c())
as.factor(mpg$drv)
is.factor(mpg$drv)
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
?as.factor
mpg$drv <- as.factor(mpg$drv)
is.factor(mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv,fill=c('black','green','black'))
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
library(ggplot2)
data(mpg)
head(mpg)
mpg$drv <- as.factor(mpg$drv)
is.factor(mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv,fill=c('black','green','red'))
if(!require(MASS)) install.packages("MASS")
data(UScereal)
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
palette(c('#e5f5f9', '#99d8c9', '#2ca25f'))
plot(calories ~ sugars, data = UScereal, pch = 19, col = shelf, bg = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('#e5f5f9', '#99d8c9', '#2ca25f'))
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
?colour
?ggplot2
?palette
palette("default")
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv,fill=c('black','green','red'))
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
drv
mpg$drv
legend('topleft',inset=.05, legend=c(mpg$drv))
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(4,f,r))
legend('topleft',inset=.05, legend=c(4,f,r))
legend('topleft',inset=.05, legend=c(4,r,f))
legend('topleft',inset=.05, legend=c(1,2,3))
legend('topleft',inset=.05, legend=c(1,2,3)
fill = c('green', 'red', 'black'))
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv,pch=drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv,pch=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv, pch=mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv, pch=mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv, pch=mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, pch=mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
plot(calories ~ sugars, data = UScereal, pch = 15)
text(UScereal$sugars, UScereal$calories, row.names(UScereal),
col = "red", pos = 1, cex = .5)  ##可以测试学生帮助的使用1
text()
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,row.names(mpg))
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv,fill=TRUE)
# Label points with the text function
plot(calories ~ sugars, data = UScereal, pch = 15)
text(UScereal$sugars, UScereal$calories, row.names(UScereal),
col = "red", pos = 1, cex = .5)  ##可以测试学生帮助的使用1
# The pos argument(1,2,3,4) 点的下左上右
plot(calories ~ sugars, data = UScereal, pch = 15)
text(UScereal$sugars, UScereal$calories, UScereal$mfr, col = "blue", pos = 2)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv,col = "red",pos=4)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv,col = "blue",pos=4)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv,col = "blue",pos=4,cex=0.5)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv,col = "blue",pos=4,cex=0.8)
table(mpg$cty,mpg$hwy)
frq(mpg$cty)
?frq
?frequency
frequency(mpg$drv)
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(1,2,3),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv,col = "blue",pos=4,cex=0.8)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c(r,f,4),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv,col = "blue",pos=4,cex=0.8)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c("r","f","4"),
fill = c('green', 'red', 'black'))
text(mpg$cty,mpg$hwy,mpg$drv,col = "blue",pos=4,cex=0.8)
outliners <- mpg[which(mpg$hwy>40),]
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c("r","f","4"),
fill = c('green', 'red', 'black'))
text(outliners$cty,outliners$hwy,outliners$drv,col = "blue",pos=4,cex=0.8)
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c("r","f","4"),
fill = c('green', 'red', 'black'))
text(outliners$cty,outliners$hwy,outliners$drv,col = "blue",pos=2,cex=0.8)
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c("r","f","4"),
fill = c('green', 'red', 'black'))
text(outliners$cty,outliners$hwy,outliners$drv-15,col = "blue",pos=2,cex=0.8)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c("r","f","4"),
fill = c('green', 'red', 'black'))
text(outliners$cty,outliners$hwy,outliners$drv - 15,col = "blue",pos=2,cex=0.8)
#作图
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c("r","f","4"),
fill = c('green', 'red', 'black'))
text(outliners$cty,outliners$hwy,outliners$drv,col = "blue",pos=2,cex=0.8)
?geom
?geom_scatter
?plot
library(nycflights13)
data(weather)
data(mpg)
library(ggplot2)
data(mpg)
ggplot(data=mpg,mapping=ase(x=cty,y=hwy))+
geom_point()
library(ggplot2)
data(mpg)
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point()
# Exercise 2c. Use ggplot2 to improve 2a图
library(ggplot2)
data(mpg)
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point()+
geom_line()
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point()+
geom_smooth()
data(mpg)
ggplot(data=mpg,mapping=aes(x=cty,y=hwy,color=drv))+
geom_point()+
geom_smooth()
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(mapping=aes(color=drv))+
geom_smooth()
data(mpg)
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(aes(color=drv))+
geom_smooth()
?geom_text
?xlab
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(aes(color=drv))+
geom_smooth()+
ylab=("Highway Miles/Gallon")+
xlab=("City Miles/Gallon")+
ggtitle=("Energy Efficiency of Highway and City")
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(aes(color=drv))+
geom_smooth()+
ylab=("Highway Miles/Gallon")+
xlab=("City Miles/Gallon")+
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(aes(color=drv))+
geom_smooth()+
ylab=("Highway Miles/Gallon")+
xlab=("City Miles/Gallon")
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(aes(color=drv))+
geom_smooth()+
ylab("Highway Miles/Gallon")+
xlab("City Miles/Gallon")+
ggtitle("Energy Efficiency of Highway and City")
data(mpg)
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(aes(shape=drv))+
geom_smooth()+
ylab("Highway Miles/Gallon")+
xlab("City Miles/Gallon")+
ggtitle("Energy Efficiency of Highway and City")
ggplot(data=mpg,mapping=aes(x=cty,y=hwy))+
geom_point(aes(color=drv))+
geom_smooth()+
ylab("Highway Miles/Gallon")+
xlab("City Miles/Gallon")+
ggtitle("Energy Efficiency of Highway and City")
library(tidyverse)
ggplot(shapes, aes(x, y)) +
geom_point(aes(shape = shape), size = 5, fill = "red") +
geom_text(aes(label = shape), hjust = 0, nudge_x = 0.15) +
scale_shape_identity() +
expand_limits(x = 4.1) +
scale_x_continuous(NULL, breaks = NULL) +
scale_y_continuous(NULL, breaks = NULL, limits = c(-1.2, 0.2)) +
theme_minimal() +
theme(aspect.ratio = 1/2.75)
shapes <- tibble(
shape = c(0, 1, 2, 5, 3, 4, 6:19, 22, 21, 24, 23, 20),
x = (0:24 %/% 5) / 2,
y = (-(0:24 %% 5)) / 4
ggplot(shapes, aes(x, y)) +
library(nycflights13)
data(weather)
head(weather)
boxplot(temp ~ month, data = weather)
head(weather)
head(weather[,temp])
head(weather$temp)
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
library(ggplot2)
data(mpg)
head(mpg)
plot(cty~hwy, data = mpg)
#改进：1.添加标题和xy轴；2.添加图例；3.极端值标签
#需要先变成因子变量
mpg$drv <- as.factor(mpg$drv)
is.factor(mpg$drv)
#极端值
outliners <- mpg[which(mpg$hwy>40),]
plot(x= mpg$cty ,y=mpg$hwy, ann=FALSE, col=mpg$drv)
title(main='Energy Efficiency of Highway and City',
ylab='Highway Miles/Gallon',
xlab='City Miles/Gallon')
legend('topleft',inset=.05, legend=c("r","f","4"),
fill = c('green', 'red', 'black'))
text(outliners$cty,outliners$hwy,outliners$drv,col = "blue",pos=2,cex=0.8)
ggplot(data=weather,mapping = aes(x=month,y=temp))
ggplot(data=weather,mapping = aes(x=month,y=temp))+
geom_boxplot()
ggplot(data=weather,mapping = aes(x=month,y=temp))+
geom_boxplot(group=month)
ggplot(data=weather,mapping = aes(x=month,y=temp))+
geom_boxplot(group=weather$month)
ggplot(data=weather,mapping = aes(x=month,y=temp))+
geom_boxplot(group=x)
?boxplot
weather$month <- as.factor(weather$month)
ggplot(data=weather,mapping = aes(x=month,y=temp))+
geom_boxplot()
stat_boxplot()
ggplot(data=weather,mapping = aes(x=month,y=temp))+
geom_boxplot()+
ylab("Tempreture")+
xlab("Month")+
ggtitle("Weather among the Year")
# Box Plots
p4 <- ggplot(UScereal, aes(mfr, calories))
p4 + geom_boxplot()
p4 + geom_boxplot(notch = TRUE)
p4 + geom_violin()
library(MASS)
library(tidyverse)
p3 <- ggplot(UScereal, aes(x = sugars))
p3 + geom_histogram(binwidth = 4)
p3 + geom_histogram(binwidth = 4) + facet_grid(shelf ~ .)
p3 + geom_histogram(binwidth = 4) + facet_grid(. ~ shelf)
p3 + geom_histogram(fill = '#3182bd', color = '#08519c', binwidth = 4) +
facet_grid(shelf ~ .) + theme(text = element_text(size = 20)) +
labs(title = 'Are Sugary Cereals on Lower Shelves?',
x = 'Sugars (grams)', y = 'Count')
p4 <- ggplot(UScereal, aes(mfr, calories))
p4 + geom_boxplot()
p4 + geom_boxplot(notch = TRUE)
p4 + geom_violin()
p4 + geom_boxplot()
p4 + geom_boxplot(notch = TRUE)
library(dplyr)
p4_meds <- UScereal %>% group_by(mfr) %>% summarise(med = median(calories))
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
labs(x = 'Manufacturer', y = 'Calories') + theme_bw() +
scale_x_discrete(labels = c('General Mills', 'Kelloggs', 'Nabisco', 'Post', 'Quaker Oats', 'Ralston Purina')) +
geom_text(data = p4_meds, aes(x = mfr, y = med, label = round(med,1)), size = 4, vjust = 1.2)
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
p4_meds <- UScereal %>% group_by(mfr) %>% summarise(med = median(calories))
p4_meds <- UScereal %>% group_by(mfr) %>% summarise(med = median(calories))
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6')
labs(x = 'Manufacturer', y = 'Calories') + theme_bw()
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
labs(x = 'Manufacturer', y = 'Calories') + theme_bw() +
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
labs(x = 'Manufacturer', y = 'Calories') + theme_bw() +
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
labs(x = 'Manufacturer', y = 'Calories') + theme_bw() +
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
labs(x = 'Manufacturer', y = 'Calories') + theme_bw() +
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
labs(x = 'Manufacturer', y = 'Calories') + theme_bw() +
p4 + geom_boxplot(outlier.shape = 8, outlier.size = 4, fill = '#8c96c6') +
labs(x = 'Manufacturer', y = 'Calories') + theme_bw() +
data(cats)
head(cats)
plot(Hwt~Bwt, data = cats)
data(cats)
head(cats)
plot(Hwt~Bwt, data = cats)
e2a <- ggplot(cats, aes(Bwt, Hwt, color = Sex))
e2a + geom_point() + theme_bw() + labs(title = 'Measurements of Cats', x = 'Body Weight (kg)', y = 'Heart Weight (grams)')
e2b <- ggplot(iris, aes(Species, Petal.Width))
e2b + geom_boxplot(fill = '#addd8e') + theme_bw() + coord_flip() + ggtitle('Distribution of Petal Length by Species' )
p<-ggplot(data=mpg,mapping=aes(x=cty,y=hwy)) +
geom_point(aes(colour=factor(year))) +
stat_smooth()
print(p)
p<-ggplot(data=mpg,mapping=aes(x=cty,y=hwy)) +
geom_point(aes(colour=factor(year))) +
stat_smooth(aes(colour=factor(year)))
print(p)
p<-ggplot(data=mpg,mapping=aes(x=cty,y=hwy)) +
geom_point(aes(colour=factor(year))) +
stat_smooth() +
scale_color_manual(values=c('blue2','red4'))
print(p)
p<-ggplot(data=mpg,mapping=aes(x=cty,y=hwy)) +
geom_point(aes(colour=factor(year))) +
stat_smooth() +
scale_color_manual(values=c('blue2','red4')) +
facet_wrap(~year,ncol=1)
print(p)
p<-ggplot(data=mpg,mapping=aes(x=cty,y=hwy)) +
geom_point(aes(colour=class,size=displ),
alpha=0.5,position = 'jitter') +
stat_smooth() +
scale_size_continuous(rang = c(4,10)) +
facet_wrap(~year,ncol=1) +
opts(title='汽车型号与油耗')+
labs(y='每加仑高速公路行驶距离',
x='每加仑城市公路行驶距离',
size='排量',
colour ='车型')
print(p)
p<-ggplot(data=mpg,mapping=aes(x=cty,y=hwy)) +
geom_point(aes(colour=class,size=displ),
alpha=0.5,position = 'jitter') +
stat_smooth() +
scale_size_continuous(rang = c(4,10)) +
facet_wrap(~year,ncol=1) +
opts(title='汽车型号与油耗')+
labs(y='每加仑高速公路行驶距离',
x='每加仑城市公路行驶距离',
size='排量',
colour ='车型')
print(p)
?opts
??opts
## 直方图
p <- ggplot(data=iris,aes(x=Sepal.Length))+
geom_histogram()
print(p)
ggplot(iris,aes(x=Sepal.Length))+
geom_histogram(binwidth=0.1,   # 设置组距
fill='skyblue', # 设置填充色
colour='black') # 设置边框色
# 增加概率密度曲线
ggplot(iris,aes(x=Sepal.Length)) +
geom_histogram(aes(y=..density..),
fill='skyblue',
color='black') +
stat_density(geom='line',color='black',
linetype=2,adjust=2)
#调整平滑宽度，adjust参数越大，越平滑。
ggplot(iris,aes(x=Sepal.Length)) +
geom_histogram(aes(y=..density..), # 注意要将y设为相对频数
fill='gray60',
color='gray') +
stat_density(geom='line',color='black',linetype=1,adjust=0.5)+
stat_density(geom='line',color='black',linetype=2,adjust=1)+
stat_density(geom='line',color='black',linetype=3,adjust=2)
library("ggthemes")
install.packages(ggthemes)
"ggthemes"
install.packages("ggthemes")
dat <- data.frame(x = rnorm(10), y = rnorm(10), label = letters[1:10])
dat <- data.frame(x = rnorm(10), y = rnorm(10), label = letters[1:10])
labeled.dat <- dat[dat$label %in% letters[1:5] ,]
ggplot(dat, aes(x,y)) + geom_point() +
geom_text(data = labeled.dat, aes(x,y, label = label), hjust = 2)
ggplot(dat, aes(x,y)) + geom_point() +
geom_text(data = dat[dat$label == "c" ,], aes(x,y, label = label), hjust = 2) +
geom_text(data = dat[dat$label == "g" ,], aes(x,y, label = label), hjust = 2)
ggplot(dat, aes(x,y)) + geom_point() +
geom_text(data = dat[dat$label == "c" ,], aes(x,y, label = label), hjust = 2) +
geom_text(data = dat[dat$label == "g" ,], aes(x,y, label = label), hjust = 2)
perc.rank <- function(x) trunc(rank(x))/length(x)
my.df <- iris
my.df <- within(my.df, xr <- perc.rank(Sepal.Width))
plot(my.df$xr,my.df$Sepal.Width)
perc.rank <- function(x) trunc(rank(x))/length(x)
my.df <- iris
my.df <- within(my.df, xr <- perc.rank(Sepal.Width))
?percent_rank
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="")  # coordinate system
plot(c(0, 1), c(0, 1), type="n", xlab="", ylab="", axes=FALSE) # w/o axes
install.packages('GGally')
library(GGally)
ggpairs(UScereal[, c(2, 8, 9, 11)],
upper = list(continuous = 'smooth', combo = 'facetdensity', discrete = 'blank') ,
lower = list(continuous = 'cor', combo = 'box'))
