gregexpr('AA', dna_ex)
grep('AA', dna_ex, value= FALSE)
grep('AA', dna_ex, value = TRUE) #如果存在"AA"就返回出来
#改为FALSE，是default设置，返回的1表明至少有一个AA
regexpr('AA', dna_ex) #正则表达式
gregexpr('AA', dna_ex)
str_locate_all(dna_ex, 'AA') # stringr包, str_extract_all提取
str_locate_all(dna_ex, 'AA') # stringr包, str_extract_all提取
library(stringr)
str_locate_all(dna_ex, 'AA') # stringr包, str_extract_all提取
fruits <- c('Apple', 'Banana', 'Orange', 'Grape', 'Pineapple', 'Kiwi', 'Peach', 'Mango', 'Strawberry', 'Guava', 'Cherry')
fruits
grep('a', fruits, value = TRUE, ignore.case = TRUE)
grep('a', fruits, value = FALSE, ignore.case = TRUE)
positions_a <- gregexpr(pattern = "a", text = fruits, ignore.case = TRUE)
num_a <- sapply(positions_a, function(x) ifelse(x[1] > 0, length(x), 0))
num_a
grep('a', fruits, value = TRUE)
grep('a', fruits, value = FALSE)
grep('a', fruits, value = FALSE, ignore.case = FALSE)
fruits <- c('Apple', 'Banana', 'Orange', 'Grape', 'Pineapple', 'Kiwi', 'Peach', 'Mango', 'Strawberry', 'Guava', 'Cherry')
fruits
grep('a', fruits, value = TRUE, ignore.case = TRUE)
#ignore.case不区分大小写
grep('a', fruits, value = FALSE, ignore.case = TRUE)
positions_a <- gregexpr(pattern = "a", text = fruits, ignore.case = TRUE)
num_a <- sapply(positions_a, function(x) ifelse(x[1] > 0, length(x), 0))
num_a
fruits <- c('Apple', 'Banana', 'Orange', 'Grape', 'Pineapple', 'Kiwi', 'Peach', 'Mango', 'Strawberry', 'Guava', 'Cherry')
fruits
grep('a', fruits, value = TRUE, ignore.case = TRUE)
#ignore.case不区分大小写
grep('a', fruits, value = FALSE, ignore.case = TRUE)
positions_a <- gregexpr(pattern = "a", text = fruits, ignore.case = TRUE)
num_a <- sapply(positions_a, function(x) ifelse(x[1] > 0, length(x), 0))
num_a
positions_a
positions_p
positions_a[2][1]
fruits <- c('Apple', 'Banana', 'Orange', 'Grape', 'Pineapple', 'Kiwi', 'Peach', 'Mango', 'Strawberry', 'Guava', 'Cherry')
fruits
grep('a', fruits, value = TRUE, ignore.case = TRUE) #ignore.case不区分大小写
grep('a', fruits, value = FALSE, ignore.case = TRUE)
positions_a <- gregexpr(pattern = "a", text = fruits, ignore.case = TRUE)
#gregexpr反馈了每一个字符串中a的位置
num_a <- sapply(positions_a, function(x) ifelse(x[1] > 0, length(x), 0))
num_a
paste("X", 1:5, sep = ".")
paste("X", 1:5, sep = ".", collapse = "")
paste0("X", 1:5, sep = ".")
# paste0("X", 1:5) 与 paste("X", 1:5, sep = "") 等价
paste("X",1:5,sep = "")
string1 <- 'RUC Data Services'
tolower(string1)
toupper(string1)
string2 <- toString(c(1,3,4))
string2
dates <- c('11/28/2011', '12/07/2012', '08/01/2013', '02/09/2015')
class(dates)
real_dates <- as.Date(dates, format = '%m/%d/%Y')
class(real_dates)
other_format <- format(real_dates, '%A %B %d, %Y')
other_format
class(other_format)
(today <- Sys.Date())
dif <- today - real_dates
class(dif)
dates <- c('11/28/2011', '12/07/2012', '08/01/2013', '02/09/2015')
class(dates)
real_dates <- as.Date(dates, format = '%m/%d/%Y')
class(real_dates)
other_format <- format(real_dates, '%A %B %d, %Y')
other_format
class(other_format)
(today <- Sys.Date())
dif <- today - real_dates
class(dif)
dates <- c('11/28/2011', '12/07/2012', '08/01/2013', '02/09/2015')
class(dates)
real_dates <- as.Date(dates, format = '%m/%d/%Y')
class(real_dates)
other_format <- format(real_dates, '%A %B %d, %Y') #呈现格式设定
other_format
class(other_format)
(today <- Sys.Date())
dif <- today - real_dates
class(dif)
dates <- c('11/28/2011', '12/07/2012', '08/01/2013', '02/09/2015')
class(dates)
real_dates <- as.Date(dates, format = '%m/%d/%Y')
class(real_dates)
other_format <- format(real_dates, '%A %B %d, %Y') #呈现格式设定
other_format
class(other_format)
(today <- Sys.Date())
dif <- today - real_dates
class(dif)
dates <- c('11/28/2011', '12/07/2012', '08/01/2013', '02/09/2015')
class(dates)
real_dates <- as.Date(dates, format = '%m/%d/%Y')
class(real_dates)
other_format <- format(real_dates, '%A %B %d, %Y') #呈现格式设定
other_format
class(other_format)
today <- Sys.Date()
dif <- today - real_dates
class(dif)
today
dif
(today <- Sys.Date())
dates <- c('3/20/2016')
firstday <- as.Date(dates,format='%m/%d/%Y')
dif <- today-firstday
dif
#已经过去了多少天
(today <- Sys.Date())
dates <- c('3/20/2016')
firstday <- as.Date(dates,format='%m/%d/%Y')
dif <- today-firstday
#在一起已经过去了多少天？
(today <- Sys.Date())
dates <- c('3/20/2016')
firstday <- as.Date(dates,format='%m/%d/%Y')
dif <- today-firstday
#在一起已经过去了
dif
library(haven)
cgss2003 <- read_sav("CGSS2003b.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003) #删除不必要的label
cgss2003 <- sjmisc::to_label(cgss2003) # label转为因子
# 可以进一步将所有labelled变量转化为普通数值变量。
w <- which(sapply(cgss2003, class) == 'labelled')
cgss2003[w] <- lapply(cgss2003[w],
function(x) as.numeric(as.character(x))
)
```{r}
library(haven)
cgss2003 <- read_sav("CGSS2003b.sav")
str
str(cgss2003)
library(haven)
cgss2003 <- read_sav("CGSS2003b.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003) #删除没有用到的label，避免变为因子变量
str(cgss2003)
library(haven)
cgss2003 <- read_sav("CGSS2003b.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003) #删除没有用到的label，避免变为因子变量
cgss2003 <- sjmisc::to_label(cgss2003) # label转为因子
# 可以进一步将所有labelled变量转化为普通数值变量。
w <- which(sapply(cgss2003, class) == 'labelled')
cgss2003[w] <- lapply(cgss2003[w],
function(x) as.numeric(as.character(x))
)
str(cgss2003)
View
View(cgss2003)
w <- which(sapply(cgss2003, class) == 'labelled')#标记
w
w
w
library(haven)
cgss2003 <- read_sav("CGSS2003b.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003) #删除没有用到的label，避免变为因子变量
library(haven)
cgss2003 <- read_sav("CGSS2003b.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003) #删除没有用到的label，避免变为因子变量
w <- which(sapply(cgss2003, class) == 'labelled')#标记
w
cgss2003[w] <- lapply(cgss2003[w],
function(x) as.numeric(as.character(x))
)#先变成字符串再变成数字
cgss2003
View(cgss2003)
View(cgss2003)
str(cgss2003)
class(cgss2003)
cgss2003%>%
mutate(age = 2003 - birth) %>%
summarize(
min = min(age, na.rm = TRUE),
q1 = quantile(age, 0.25, na.rm = TRUE),
median = quantile(age, 0.5, na.rm = TRUE),
q3 = quantile(age, 0.75, na.rm = TRUE),
max = max(age, na.rm = TRUE),
mean = mean(age, na.rm = TRUE),
sd = sd(age, na.rm = TRUE),
missing = sum(is.na(age))
)
library(tidyverse)
cgss2003%>%
mutate(age = 2003 - birth) %>%
summarize(
min = min(age, na.rm = TRUE),
q1 = quantile(age, 0.25, na.rm = TRUE),
median = quantile(age, 0.5, na.rm = TRUE),
q3 = quantile(age, 0.75, na.rm = TRUE),
max = max(age, na.rm = TRUE),
mean = mean(age, na.rm = TRUE),
sd = sd(age, na.rm = TRUE),
missing = sum(is.na(age))
)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
cgss2003 %>%
mutate(age=2003-birth) %>%
mutate(agegr=cut(age,
breaks=c(0,20,40,60,Inf),
labels=c("yonth","midage","midoage","elder"))) %>%
count(agegr)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
library(haven)
cgss2003 <- read_sav("CGSS2003b.sav")
cgss2003[cgss2003==-1] <- NA;cgss2003[cgss2003==-2] <- NA;cgss2003[cgss2003==-3] <- NA
cgss2003 <- sjlabelled::drop_labels(cgss2003) #删除没有用到的label，避免变为因子变量
cgss2003 <- sjmisc::to_label(cgss2003) # label转为因子
# 可以进一步将所有labelled变量转化为普通数值变量。
w <- which(sapply(cgss2003, class) == 'labelled')#标记
cgss2003[w] <- lapply(cgss2003[w],
function(x) as.numeric(as.character(x))
)#先变成字符串再变成数字
library(forcats)
cgss2003 %>%
mutate(han = fct_collapse(ethnic,"汉"=c("汉"),
"少数民族"=c("蒙","满","回","藏","壮","维","其他")))%>%
count(han)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data")
data <- read.table('data/anscombe1.txt',T)
head(data)
data <- data[,-1]
head(data)
dim(data)
colMeans(data)
rowMeans(data)
colMeans(data)
rowMeans(data)
colMeans(data)
rowMeans(data)
colMeans(data)
rowMeans(data)
colMeans(data)
rowMeans(data)
Bryk <- MathAchieve[, c("School", "SES", "MathAch")]
Sector <- MathAchSchool$Sector
names(Sector) <- row.names(MathAchSchool)
Bryk$Sector <- Sector[as.character(Bryk$School)]
head(Bryk)
getwd()
data <- read.table('data/anscombe1.txt',T)
data <- read.table('data/anscombe1.txt',T)
data <- read.table('data/anscombe1.txt',T)
data <- read.table('data/anscombe1.txt',T)
data <- read.table('data/anscombe1.txt',T)
data <- read.table('data/anscombe1.txt',T)
data <- read.table('data/anscombe1.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data")
data <- read.table('data/anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data")
data <- read.table('data/anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data")
data <- read.table('data/anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data")
data <- read.table('data/anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data")
data <- read.table('data/anscombe.txt',T)
head(data)
data <- data[,-1]
head(data)
dim(data)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
data <- read.table('data/anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
data <- read.table('data/anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
data <- read.table('data/anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
data <- read.table('anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
data <- read.table('anscombe.txt',T)
setwd("/Users/wangyuan/Documents/GitHub/personal/lesson7/data/")
data <- read.table('anscombe.txt',T)
head(data)
data <- data[,-1]
head(data)
dim(data)
colMeans(data)
rowMeans(data)
sapply(1:4,function(x) cor(data[,x],data[,x+4]))
par(mfrow=c(2,2))
sapply(1:4,function(x) plot(data[,x],data[,x+4]))
# Trellis displays (implemented in lattice package; uses grid package)
library(nlme) # for data
library(lattice) # for Trellis graphics
head(MathAchieve)
head(MathAchSchool)
Bryk <- MathAchieve[, c("School", "SES", "MathAch")]
Sector <- MathAchSchool$Sector
names(Sector) <- row.names(MathAchSchool)
Bryk$Sector <- Sector[as.character(Bryk$School)]
head(Bryk)
#########################################################
# 一图胜千言示例3：3D动态图
# rgl 3D graphics package (by Daniel Adler and Duncan Murdoch)
# uses scatter3d() from car package
library(car)
scatter3d(prestige ~ log(income) + education | type, data=Prestige,
ellipsoid=TRUE, parallel=FALSE,revolution=TRUE)
# data(Duncan, package="car")
# 加上revolutions=3表示自动旋转
scatter3d(prestige~education+income, data=Duncan, fit="linear",
residuals=TRUE, bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=TRUE,
id.method='mahal', id.n = 3, revolutions=3)
## 3D图
library(rgl)
x <- sort(rnorm(1000))
y <- rnorm(1000)
z <- rnorm(1000) + atan2(x,y)
plot3d(x, y, z, col=rainbow(1000))
## 3D图
library(rgl)
x <- sort(rnorm(1000))
y <- rnorm(1000)
z <- rnorm(1000) + atan2(x,y)
plot3d(x, y, z, col=rainbow(1000))
if(!require(MASS)) install.packages("MASS")
data(UScereal)
head(UScereal)
hist(UScereal$calories, breaks = 15)
hist(UScereal$calories, bin = 15)
hist(UScereal$calories, breaks = 15)
hist(UScereal$calories, bin = 15)
##1. 需要事先明确可视化的具体目标
###探索性可视化
###解释性可视化
##2. 需要考虑数据和受众群体的特点
###哪些变量最重要最有趣
###受众方面要考虑阅读者的角色和知识背景
###选择合适的映射方式
##3. 在传送足够信息前提下保持简洁
##4、将变量取值映射到图形元素上
### 坐标位置
### 尺寸
### 色彩
### 形状
### 文字
############################################################
# 二、利用基础绘图命令做统计图
if(!require(MASS)) install.packages("MASS")
data(UScereal)
head(UScereal)
############################################################
# A. 选择合适的统计图
# 单个连续变量的分布：One Continuous Variable
# Q: What is the Distribution of Variable X?
# Q: Is my Variable X normally distributed? Bimodal? Skewed?
# Q: Are there any outliers in my variable?
# Histogram
hist(UScereal$calories, breaks = 15)
hist(UScereal$calories, bin = 15)
hist(UScereal$calories, breaks = 15)
hist(UScereal$calories, breaks = 15)
hist(UScereal$calories, breaks = 15)
library(ggplot2)
ggplot(data=USscereal)
ggplot(data=UScereal)+
geom_bar(x=calories)
geom_bar(x=calories)
boxplot(UScereal$calories, horizontal = TRUE)
barplot(table(UScereal$shelf))
barplot(UScereal$shelf)
View(UScereal)
table(UScereal$shelf)
plot()
plot()
plot(x = UScereal$sugars)
plot(calories ~ sugars, data = UScereal) #
plot(UScereal[, c(2:8, 10)]) # 8个变量的scatterplot matrix
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE)
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE, switch())
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE, switch())
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE, switch())
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE, switch())
boxplot(sugars ~ shelf, data = UScereal, horizontal = TRUE)
plot(calories ~ sugars, data = UScereal, col = shelf)
legend('topright', inset = .05, legend = c(3,2,1),
fill = c('green', 'red', 'black'))
par(mfrow(1,1))
?mfrow
??mfrow
